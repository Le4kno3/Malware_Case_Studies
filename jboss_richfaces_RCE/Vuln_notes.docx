
Attack Traffic : 

------------------------------------------------------------------------------------------------------------


https://example.com/a4j/g/3_3_3.Final/rfRes/org.richfaces.resource.MediaOutputResource.jsf?do=eAFdU01oE0EYnUaC6c-hrbQoIqTbWhKws-3FSyyWqqWBVIVItS2Ck93pZuNkZzozaVar0YsoRUX0WvDgwYuevCj0UrwJFRS96EXwrAfxYgXxm11t6S4sA8t7b9733rfPvqF0Q6J9C6UaWSaYkcDDZyo16ujCg7cXHnerPEshFAqEUFpJ1LODmuScURJsZuXNj2tb31OobR6llwlrUEBr1OHXiUftmqCeAOKwIYZ4kThUYYfXBQ9ooHFZE02nOXOp


------------------------------------------------------------------------------------------------------------

Vulnerabilities
•	https://codewhitesec.blogspot.com/2018/05/poor-richfaces.html
•	CVE-2018-14667





JSF – Java Server Faces
•	For the specific UserResource request of the object, RichFaces will first deserialize the UriData object, and then use the EL expression to parse and obtain the modified and expires values of the resource, which leads to the execution of arbitrary EL expressions. 
•	By constructing special EL expressions, remote arbitrary can be achieved Code execution.
•	eAFdU01oE0EYnUaC6c-hrbQoIqTbWhKws-3BUyyWqqWBVIVItS2Ck93pZuNkZzozaVar0YsoRUX0WvDgwYuevCj0UrwJFRS96EXwrAfxYgXxm11t6S4sA8t7b9733rfPvqF0Q6J9C6UaWSaYkcDDZyo16ujCg7cXHnerPEshFAqEUFpJ1LODmuScURJsZuXNj2tb31OobR6llwlrUEBr1OHXiUftmqCeAOKwIYZ4kThUYYfXBQ9ooHFZE02nOXOpLJ
o	This is a EL expression
•	d


Videos to watch
o	https://www.youtube.com/watch?v=VaLSYzEWgVE
o	Step 1 : Check if the vulnerability exists
o	Step 2 : Does a test RCE by creating a listener on some port.
o	https://www.youtube.com/watch?v=HR7-nL5G91w
o	Step 3 : RCE and Reverse shell POC
o	https://www.youtube.com/watch?v=mjCAcQ5HFlI
o	Practical exploitation of the vulnerability

References :
•	Understand the vulnerability
o	https://codewhitesec.blogspot.com/2018/05/poor-richfaces.html
•	https://github.com/joaomatosf/jexboss
•	POC : https://github.com/syriusbughunt/CVE-2018-14667
•	https://translate.google.com/translate?hl=en&sl=zh-CN&u=https://github.com/Cryin/Paper/blob/master/CVE-2018-14667%2520-%2520JBoss%2520RichFaces%2520EL%2520Injection%2520RCE%2520Analysis.md&prev=search&pto=aue
o	https://github.com/Cryin/Paper/blob/master/CVE-2018-14667 - JBoss RichFaces EL Injection RCE Analysis.md

Mitigate vulnerability
•	Search for redhat application forums to mitigate it
o	https://sso.redhat.com/auth/realms/redhat-external/login-actions/authenticate?client_id=https%3A%2F%2Fsso.jboss.org&tab_id=L6DHSufmtyc
•	Need to check impact
o	Blocking requests of URLs with paths containing /DATA/ should mitigate CVE-2013-2165 and RF-14310.
o	Blocking requests of URLs with paths containing org.richfaces.resource.MediaOutputResource (literally or URL encoded) should mitigate CVE-2015-0279 and RF-14309.
Read below references
o	CVE-2018-14667-RichFaces remote code execution-Red Hat Customer Portal
o	Red Hat JBoss EAP RichFaces Access Control Bug Lets Remote Users Execute Arbitrary Code on the Target System-SecurityTracker
o	Java Reflection-Constructors
o	Objenesis: Twenty Second Tutorial
o	[RF-13977] Remote Command Injection (EL Injection)-JBoss Issue Tracker
o	Remote Code with Expression Language Injection | Dan Amodio
o	code white | Blog: Poor RichFaces

